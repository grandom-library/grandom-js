name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        package: [
          # common packages
          '@grandom/core',
          '@grandom/engines',

          # individual packages
          '@grandom/bigint',
          '@grandom/boolean',
          '@grandom/number',
          '@grandom/pick',
          '@grandom/shuffle',
          '@grandom/string',
          '@grandom/weighted',

          # library package
          'grandom'
        ]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: init
        run: >
          npm ci &&
          npx lerna exec --scope ${{ matrix.package }} --
          npm ci

      - name: check commits
        run: >
          npx lerna exec --scope ${{ matrix.package }} --
          npx commitlint
          --from ${{ github.event.pull_request.base.sha }}
          --to ${{ github.event.pull_request.head.sha }}
          --verbose

      - name: check lint
        run: >
          npx lerna exec --scope ${{ matrix.package }} --
          npm run check:lint

      - name: check types
        run: >
          npx lerna exec --scope ${{ matrix.package }} --
          npm run check:types

      - name: test
        run: >
          npx lerna exec --scope ${{ matrix.package }} --
          npm test -- --coverage

      - name: prepare coverage flag
        id: coverage_flag
        run: |
          coverage_flag=$(echo "${{ matrix.package }}" | sed 's/@//;s/\//-/g')
          echo "coverage_flag=$coverage_flag" >> $GITHUB_ENV

      - name: upload coverage
        uses: codecov/codecov-action@v3
        with:
          flags: ${{ env.coverage_flag }}

    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    needs: test

    runs-on: ubuntu-20.04
    timeout-minutes: 10

    # skip the job if the pull request was opened by Dependabot
    if: ${{ github.actor != 'dependabot[bot]' }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: init
        run: npm ci && npx lerna exec -- npm ci

      # common packages ------------------------------------------------------------------------------------------------
      - name: '@grandom/core'
        if: ${{ !cancelled() }}
        run: bash scripts/release.sh @grandom/core

      - name: '@grandom/engines'
        if: ${{ !cancelled() }}
        run: bash scripts/release.sh @grandom/engines

      # individual packages --------------------------------------------------------------------------------------------
      - name: '@grandom/bigint'
        if: ${{ !cancelled() }}
        run: bash scripts/release.sh @grandom/bigint

      - name: '@grandom/boolean'
        if: ${{ !cancelled() }}
        run: bash scripts/release.sh @grandom/boolean

      - name: '@grandom/number'
        if: ${{ !cancelled() }}
        run: bash scripts/release.sh @grandom/number

      - name: '@grandom/pick'
        if: ${{ !cancelled() }}
        run: bash scripts/release.sh @grandom/pick

      - name: '@grandom/shuffle'
        if: ${{ !cancelled() }}
        run: bash scripts/release.sh @grandom/shuffle

      - name: '@grandom/string'
        if: ${{ !cancelled() }}
        run: bash scripts/release.sh @grandom/string

      - name: '@grandom/weighted'
        if: ${{ !cancelled() }}
        run: bash scripts/release.sh @grandom/weighted

      # library package ------------------------------------------------------------------------------------------------
      - name: grandom
        if: ${{ !cancelled() }}
        run: bash scripts/release.sh grandom

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
